{"version":3,"sources":["logo.svg","Components/navbar.js","Static/Rashad_Arbab.png","Static/PhotoOfMe.jpg","Components/about-paper.js","Components/home.js","Components/about.js","Components/VisualizingKitchener.js","Components/HeartBeat.js","Components/projectsContent.js","Components/projects.js","Components/contact.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","drawerWidth","classes","makeStyles","menuButton","marginRight","spacing","title","flexGrow","button","borderRadius","padding","minWidth","color","highlightButton","backgroundColor","display","transition","transitions","create","easing","sharp","duration","leavingScreen","width","marginLeft","easeOut","enteringScreen","flexShrink","alignItems","mixins","toolbar","justifyContent","useStyles","useState","goAbout","setGoAbout","goHome","setGoHome","goProjects","setGoProjects","goContact","setGoContact","redirectFunction","prop","to","openMenu","setOpenMenu","React","handleDrawerOpen","handleDrawerClose","AppBar","position","className","clsx","appBar","appBarShift","Toolbar","IconButton","aria-label","onClick","edge","hide","Typography","variant","type","Grid","container","justify","Button","window","open","fontSize","style","Drawer","drawer","anchor","paper","drawerPaper","drawerHeader","Divider","List","ListItem","content","contentShift","direction","ComplexGrid","xsScreen","up","textPadding","cardWidth","root","minHeight","marginBottom","image","height","img","margin","imgMobile","borderTopLeftRadius","borderTopRightRadius","Paper","item","src","MyPhoto","xs","sm","gutterBottom","fontFamily","href","marginTop","paddingTop","paddingBottom","paddingInline","Home","lgScreen","initial","opacity","translateY","TitlePng","delay","About","actionsContainer","resetContainer","heading","typography","pxToRem","flexBasis","secondaryHeading","palette","text","secondary","cardRoot","marginInline","maxWidth","mobileCardRoot","cardDetails","flexDirection","cardContent","flex","cardCover","cardControls","paddingLeft","cardPlayIcon","getStepContent","step","items","body","stackItems","logoLink","process","label","description","VerticalLinearStepper","activeStep","setActiveStep","steps","handleNext","prevActiveStep","handleBack","Stepper","orientation","map","index","Step","StepLabel","StepContent","element","Accordion","AccordionSummary","expandIcon","aria-controls","id","AccordionDetails","bodyElement","stackElement","elevation","CardContent","component","CardMedia","disabled","length","square","visKitch","borderColor","hrtBeat","TabPanel","children","value","other","role","hidden","aria-labelledby","Box","p","a11yProps","tab","FullWidthTabs","setValue","Tabs","onChange","event","newValue","Tab","axis","onChangeIndex","tabPanel","dir","tablPanel","HeartBeat","Projects","Contact","setOpen","alert","setAlert","top","onSubmit","e","preventDefault","console","log","target","emailjs","sendForm","then","result","severity","message","error","TextField","name","multiline","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Alert","App","basename","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.155199ea.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react'\nimport clsx from 'clsx';\nimport { AppBar, Toolbar, Divider, Drawer, Grid, IconButton, makeStyles, List, ListItem, Typography, Button, useMediaQuery, useTheme, Menu, MenuItem } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { Redirect } from 'react-router-dom';\n\n\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\n\nconst Navbar = (props) => {\n    const theme = useTheme();\n    const isMobile = useMediaQuery(theme.breakpoints.down(900))\n\n    const drawerWidth = 200;\n\n    const useStyles = makeStyles((theme) => ({\n\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        title: {\n            flexGrow: 1,\n        },\n        button: {\n            borderRadius: \"8px\",\n            padding: \"10px\",\n            minWidth: '200px',\n            color: \"white\",\n\n        },\n        highlightButton: {\n            borderRadius: \"8px\",\n            padding: \"10px\",\n            minWidth: '200px',\n            color: \"white\",\n            backgroundColor: \"rgba(255,255,255,0.1)\"\n        },\n        menuButton: {\n            marginRight: theme.spacing(2)\n        },\n        root: {\n            display: 'flex',\n        },\n        appBar: {\n            backgroundColor: \"rgba(0,0,0,0.1)\",\n            transition: theme.transitions.create(['margin', 'width'], {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n        },\n        appBarShift: {\n            width: `calc(100% - ${drawerWidth}px)`,\n            marginLeft: drawerWidth,\n            transition: theme.transitions.create(['margin', 'width'], {\n                easing: theme.transitions.easing.easeOut,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        hide: {\n            display: 'none',\n        },\n        drawer: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n        drawerPaper: {\n            width: drawerWidth,\n            backgroundColor: 'rgba(33, 34, 33, 0.5)'\n        },\n        drawerHeader: {\n            display: 'flex',\n            alignItems: 'center',\n            padding: theme.spacing(0, 1),\n            // necessary for content to be below app bar\n            ...theme.mixins.toolbar,\n            justifyContent: 'flex-end',\n        },\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(3),\n            transition: theme.transitions.create('margin', {\n                easing: theme.transitions.easing.sharp,\n                duration: theme.transitions.duration.leavingScreen,\n            }),\n            marginLeft: -drawerWidth,\n        },\n        contentShift: {\n            transition: theme.transitions.create('margin', {\n                easing: theme.transitions.easing.easeOut,\n                duration: theme.transitions.duration.enteringScreen,\n            }),\n            marginLeft: 0,\n        },\n    }));\n\n\n    const classes = useStyles();\n\n\n    const [goAbout, setGoAbout] = useState(false);\n    const [goHome, setGoHome] = useState(false);\n    const [goProjects, setGoProjects] = useState(false);\n    const [goContact, setGoContact] = useState(false);\n\n\n    const redirectFunction = (prop) => {\n        return (\n            <Redirect to={`/${prop}`} />\n        )\n    }\n\n    const wideNavbar = () => {\n        return (\n            <AppBar position=\"sticky\" className={classes.appBar}>\n                <Toolbar>\n                    <Grid container direction=\"row\" justify=\"space-evenly\" alignItems=\"center\">\n                        <Button className={props.type === 'home' ? classes.highlightButton : classes.button} onClick={() => { setGoHome(true) }}>Home</Button>\n                        <Button className={props.type === 'about' ? classes.highlightButton : classes.button} onClick={() => { setGoAbout(true) }}>About</Button>\n                        <Button className={props.type === 'projects' ? classes.highlightButton : classes.button} onClick={() => { setGoProjects(true) }}>Projects</Button>\n                        <Button className={props.type === 'contact' ? classes.highlightButton : classes.button} onClick={() => { setGoContact(true) }}>Contact</Button>\n                        <Button onClick={() => window.open(\"https://github.com/RashadArbab?tab=repositories\")} ><GitHubIcon fontSize=\"large\" style={{ color: 'white' }} /> </Button>\n                        <Button onClick={() => window.open(\"https://www.linkedin.com/in/rashadarbab/\")} ><LinkedInIcon fontSize=\"large\" style={{ color: 'white' }} /> </Button>\n\n                    </Grid>\n                </Toolbar>\n            </AppBar>\n        )\n    }\n\n\n\n    const [openMenu, setOpenMenu] = useState(false);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const handleDrawerOpen = () => {\n        setOpenMenu(true);\n    };\n\n    const handleDrawerClose = () => {\n        setOpenMenu(false);\n    };\n\n    const narrowNavbar = () => {\n        return (\n            <div>\n                <AppBar\n                    position=\"fixed\"\n                    className={clsx(classes.appBar, {\n                        [classes.appBarShift]: openMenu,\n                    })}\n                >\n                    <Toolbar>\n                        <IconButton\n                            color=\"inherit\"\n                            aria-label=\"open drawer\"\n                            onClick={handleDrawerOpen}\n                            edge=\"start\"\n                            className={clsx(classes.menuButton, openMenu && classes.hide)}\n                        >\n                            <MenuIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" >\n                            {props.type}\n                        </Typography>\n                        <Grid container justify=\"flex-end\" >\n                            <Button onClick={() => window.open(\"https://github.com/RashadArbab?tab=repositories\")} ><GitHubIcon fontSize=\"large\" style={{ color: 'white' }} /> </Button>\n                            <Button onClick={() => window.open(\"https://www.linkedin.com/in/rashadarbab/\")} ><LinkedInIcon fontSize=\"large\" style={{ color: 'white' }} /> </Button>\n\n                        </Grid>\n                    </Toolbar>\n                </AppBar>\n                <Drawer\n                    className={classes.drawer}\n                    variant=\"persistent\"\n                    anchor=\"left\"\n                    open={openMenu}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                    style={{ backgroundColor: 'rgba(33, 34, 33, 1)' }}\n                >\n                    <div className={classes.drawerHeader}>\n                        <IconButton onClick={handleDrawerClose}>\n                            <ChevronLeftIcon style={{ color: 'white' }} />\n                        </IconButton>\n                    </div>\n                    <Divider />\n                    <List>\n                        <ListItem button style={{ color: 'white', justifyContent: \"center\" }} onClick={() => setGoHome(true)}><Typography variant={'h5'}>Home</Typography></ListItem>\n                        <ListItem button style={{ color: 'white', justifyContent: \"center\" }} onClick={() => setGoAbout(true)}><Typography variant={'h5'}>About</Typography></ListItem>\n                        <ListItem button style={{ color: 'white', justifyContent: \"center\" }} onClick={() => setGoProjects(true)}><Typography variant={'h5'}>Projects</Typography></ListItem>\n                        <ListItem button style={{ color: 'white', justifyContent: \"center\" }} onClick={() => setGoContact(true)}><Typography variant={'h5'}>Contact</Typography></ListItem>\n                        <ListItem button onClick={() => window.open(\"https://github.com/RashadArbab?tab=repositories\")} style={{ justifyContent: \"center\" }} ><GitHubIcon fontSize=\"large\" style={{ color: 'white' }} /> </ListItem>\n                        <ListItem button onClick={() => window.open(\"https://www.linkedin.com/in/rashadarbab/\")} style={{ justifyContent: \"center\" }}><LinkedInIcon fontSize=\"large\" style={{ color: 'white' }} /> </ListItem>\n\n                    </List>\n                    <Divider />\n\n                </Drawer>\n                <main\n                    className={clsx(classes.content, {\n                        [classes.contentShift]: openMenu,\n                    })}\n                ></main>\n            </div>\n        )\n    }\n\n    return (\n        <div>\n            {isMobile ? narrowNavbar() : wideNavbar()}\n            {goHome ? redirectFunction('home') : \"\"}\n            {goAbout ? redirectFunction('about') : \"\"}\n            {goProjects ? redirectFunction(\"projects\") : \"\"}\n            {goContact ? redirectFunction(\"contact\") : \"\"}\n        </div>\n    )\n}\n\nexport default Navbar;","export default __webpack_public_path__ + \"static/media/Rashad_Arbab.a2be917d.png\";","export default __webpack_public_path__ + \"static/media/PhotoOfMe.40c6251d.jpg\";","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { Button } from '@material-ui/core';\n\nimport MyPhoto from '../Static/PhotoOfMe.jpg';\n\nimport { useTheme, useMediaQuery } from '@material-ui/core';\n\nimport { Redirect } from 'react-router-dom';\n\n\n\n\nexport default function ComplexGrid() {\n    const theme = useTheme();\n    const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"))\n    const xsScreen = useMediaQuery(theme.breakpoints.down(\"xs\"))\n    const lgScreen = useMediaQuery(theme.breakpoints.up(\"lg\"))\n\n    const [goProjects, setGoProjects] = useState(false);\n\n    const textPadding = xsScreen ? \"8px\" : \"20px\"\n    const cardWidth = xsScreen ? \"90vw\" : \"60vw\"\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            flexGrow: 1,\n        },\n        paper: {\n            backgroundColor: \"rgba(255,255,255,0.05)\", minHeight: '20vh', width: cardWidth, borderRadius: \"8px\",\n            marginBottom: \"50px\"\n        },\n        image: {\n            width: 128,\n            height: 128,\n        },\n        img: {\n            borderRadius: '8px',\n            margin: \"25px\"\n        },\n        imgMobile: {\n            width: '100%',\n            borderTopLeftRadius: '8px',\n            borderTopRightRadius: '8px'\n        },\n    }));\n\n    const classes = useStyles();\n\n    const renderButton = () => {\n        return (\n            <Grid container justify={\"center\"} item>\n                <Button style={{ marginTop: \"20px\", marginBottom: \"10px\", color: \"white\", paddingTop: \"15px\", paddingBottom: \"15px\", paddingInline: \"25px\", backgroundColor: \"rgba(255,255,255,0.1)\" }} onClick={() => setGoProjects(true)}>View Projects</Button>\n            </Grid>\n        )\n    }\n\n\n    return (\n        <div className={classes.root}>\n            <Grid container justify={\"center\"} >\n                <Paper className={classes.paper}>\n                    <Grid container >\n                        <Grid item>\n                            <img src={MyPhoto} width={xsScreen ? \"100%\" : \"200ch\"} height={xsScreen ? \"300ch\" : \"200ch\"} className={xsScreen ? classes.imgMobile : classes.img} />\n                        </Grid>\n                        <Grid item xs={12} sm container style={{ margin: textPadding }}>\n                            <Grid item xs container direction=\"column\" spacing={2}>\n                                <Grid item xs>\n                                    <Typography gutterBottom variant=\"h4\" style={{ fontFamily: \"sans-serif\", color: \"#bebebe\" }}>\n                                        About Me\n                                    </Typography>\n                                    <Typography variant=\"h6\" style={{ fontFamily: \"sans-serif\", color: \"#bebebe\" }} gutterBottom>\n                                        I am an engineering student at the University of Waterloo, specializing in Software Development ND Management Engineering.\n                                        Currently, I am seeking co-op and internship opportunities, starting Fall 2021. During my previous co-op work term, I was a Full Stack Developer at the University of Waterloo and built\n                                        the <a href='#' style={{ color: \"#bebebe\" }} onClick={() => window.open('http://3.14.232.195/people')}>Visualizing Historical Kitchener</a> site. Besides work, I am a devoted Formula 1 fan (Go RBR!).\n                                </Typography>\n                                </Grid>\n                                {xsScreen ? renderButton() : \"\"}\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                </Paper>\n            </Grid>\n\n            {goProjects ? <Redirect to=\"/projects\" /> : \"\"}\n        </div>\n    );\n}\n\n","import React, { useState } from 'react'\nimport { Card, Grid, Button, useTheme, useMediaQuery } from '@material-ui/core';\nimport Anime, { anime } from 'react-anime';\nimport Navbar from './navbar';\nimport { Redirect } from 'react-router-dom';\nimport TitlePng from '../Static/Rashad_Arbab.png';\nimport AboutPaper from './about-paper';\n\nconst Home = () => {\n\n    const theme = useTheme();\n    const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"))\n    const xsScreen = useMediaQuery(theme.breakpoints.down(\"xs\"))\n    const lgScreen = useMediaQuery(theme.breakpoints.up(\"lg\"))\n    const [goAbout, setGoAbout] = useState(false);\n\n    const getWidth = () => {\n        if (xsScreen) {\n            return (300)\n        } else if (lgScreen) {\n            return (800)\n        } else {\n            return (600)\n        }\n    }\n\n\n    const redirectFunction = () => {\n        return (\n            <Redirect to={\"/about\"} />\n        )\n    }\n\n    return (\n        <div>\n            <Grid direction={\"column\"} alignItems=\"center\" spacing={theme.spacing(10,2)}>\n                <Anime\n                    initial\n                    opacity={[0, 1]}\n                    easing={\"easeInOutSine\"}\n                    duration={1000}\n                >\n                    <Navbar type={'home'} />\n                </Anime>\n                <div style={{ marginTop: '50px' }}>\n                    <Anime\n                        opacity={[0, 1]}\n                        easing={\"easeInOutSine\"}\n                        duration={2000}\n                        translateY={\"20vh\"}\n                    >\n                        <Grid container direction={\"column\"} justify={'center'} alignItems=\"center\">\n                            <img src={TitlePng} width={getWidth()} />\n                        </Grid>\n                    </Anime>\n                    <Anime\n                        opacity={[0, 1]}\n                        easing={\"linear\"}\n                        delay={2000}\n                        duration={500}\n                    >\n                        <Grid container justify=\"center\">\n                            <Button style={{ marginTop: \"250px\", color: \"white\", paddingTop: \"15px\", paddingBottom: \"15px\", paddingInline: \"25px\", backgroundColor: \"rgba(255,255,255,0.1)\" }} onClick={() => setGoAbout(true)}>Get Started</Button>\n                        </Grid>\n                    </Anime>\n                </div>\n            </Grid>\n            {goAbout ? redirectFunction() : \"\"}\n        </div>\n    )\n}\n\nexport default Home;","import { Card, Grid, Button, useTheme, useMediaQuery, Paper, Typography } from '@material-ui/core';\nimport Anime, { anime } from 'react-anime';\nimport Navbar from './navbar';\nimport TitlePng from '../Static/Rashad_Arbab.png';\nimport MyPhoto from '../Static/PhotoOfMe.jpg';\nimport AboutPaper from './about-paper';\n\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst About = () => {\n\n    const theme = useTheme();\n    const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"))\n    const xsScreen = useMediaQuery(theme.breakpoints.down(\"xs\"))\n    const lgScreen = useMediaQuery(theme.breakpoints.up(\"lg\"))\n\n    const [goProjects, setGoProjects] = useState(false);\n\n    const textPadding = xsScreen ? \"8px\" : \"20px\"\n    const cardWidth = xsScreen ? \"90vw\" : \"60vw\"\n\n    const renderButton = () => {\n        return (\n            <Anime\n                opacity={[0, 1]}\n                easing={\"linear\"}\n                delay={2000}\n                duration={500}\n            >\n\n                <Grid container justify=\"center\" alignItems=\"center\">\n                    <Button style={{ marginTop: \"200px\", marginBottom: \"200px\", color: \"white\", paddingTop: \"15px\", paddingBottom: \"15px\", paddingInline: \"25px\", backgroundColor: \"rgba(255,255,255,0.1)\" }} onClick={() => setGoProjects(true)}>View Projects</Button>\n                </Grid>\n            </Anime>\n        )\n    }\n\n    return (\n        <div>\n\n            <Anime\n                opacity={[0, 1]}\n                easing={\"easeInOutSine\"}\n                duration={1000}\n            >\n                <Navbar type={\"about\"} />\n            </Anime>\n            <div style={{\n                padding: theme.spacing(0, 2),\n                justifyContent: \"center\"\n            }}>\n                <Anime\n                    initial\n                    translateY={xsScreen ? \"5vh\" : \"15vh\"}\n                    opacity={[0, 1]}\n                    easing={\"easeInOutSine\"}\n                    duration={2000}\n                >\n                    <AboutPaper />\n                </Anime>\n                {xsScreen ? \"\" : renderButton()}\n            </div>\n\n            { goProjects ? <Redirect to={\"/projects\"} /> : \"\"}\n\n        </div >\n    )\n}\n\nexport default About;","import { Typography, Grid, useMediaQuery, useTheme } from \"@material-ui/core\";\n\nimport React from 'react';\nimport { makeStyles, Accordion, AccordionSummary, classes, AccordionDetails, Card, CardContent, CardMedia } from '@material-ui/core';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n\n\nconst visKitch = () => {\n\n\n    return (\n        <div>\n            <Grid container justify=\"center\" >\n                <Typography variant={\"h2\"} style={{ color: \"white\" }}>Visualizing Historical Kitchener</Typography>\n                <Typography variant={\"h4\"} style={{ color: \"white\" }}>A scalable website that visualizes the City of Kitchener’s historical archives</Typography>\n                <Paper elevation={5} style={{ marginTop: \"25px\", paddingTop: \"10px\", paddingBottom: \"10px\", borderRadius: \"8px\", backgroundColor: \"rgba(33, 34, 33, 1)\" }}>\n                    <Grid container justify=\"center\">\n                        <VerticalLinearStepper />\n                        <Button variant={\"outlined\"} style={{ borderColor: \"white\", color: \"white\" }} onClick={() => window.open(\"http://3.14.232.195/\")}>Go to site</Button>\n                    </Grid>\n                </Paper>\n            </Grid>\n        </div>\n    )\n}\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n\n    root: {\n        width: '100%',\n\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n        marginBottom: theme.spacing(2),\n\n    },\n    resetContainer: {\n        padding: theme.spacing(3),\n\n\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n    cardRoot: {\n        display: 'flex',\n        marginInline: '8px',\n        marginTop: '8px',\n        padding: '3px',\n        maxWidth: '100%'\n    },\n    mobileCardRoot: {\n        display: 'flex',\n        marginInline: '0px',\n        marginTop: '8px',\n        padding: '3px',\n        maxWidth: '100%'\n    },\n    cardDetails: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    cardContent: {\n        flex: '1 0 auto',\n    },\n    cardCover: {\n        width: 151,\n    },\n    cardControls: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n    cardPlayIcon: {\n        height: 38,\n        width: 38,\n    },\n}));\n\nfunction getSteps() {\n    return [\n        <Typography variant={\"h6\"} style={{ color: \"white\" }}>Project Description</Typography>,\n        <Typography variant={\"h6\"} style={{ color: \"white\" }}>What I did</Typography>,\n        <Typography variant={\"h6\"} style={{ color: \"white\" }}>The stack I used</Typography>,\n    ];\n}\n\nfunction getStepContent(step) {\n\n    switch (step) {\n        case 0:\n            return (\n                {\n                    items: [\"no data\"]\n                }\n            )\n        case 1:\n            return (\n                {\n                    items: [{\n                        title: 'Client Site',\n                        secondaryHeading: 'A scalable website that visualizes the City of Kitchener’s historical archives',\n                        body: [\n                            'Used Google Maps to create an interactive map of residents and businesses',\n                            'Building an intelligent and intuitive frontend product with the use of REACT/REDUX',\n\n                            'Used MongoDB to index, store, search and filter data',\n                        ]\n                    },\n                    {\n                        title: 'Service Provider Portal',\n                        secondaryHeading: 'A secure backend portal for service providers',\n                        body: [\n                            \"Created a sign up portal that allows service providers to sign up and list their services\",\n                            \"Used Google Maps api to geolocate and pin the location of the service\",\n                            \"Built functionality for service providers to create different types of services Independant Doctor, Hospital, Ambulance Service\"]\n                    },\n                    {\n                        title: 'Backend Server',\n                        secondaryHeading: 'The backend for the whole project',\n                        body: [\n                            'Built a clustered light weight NodeJS and Express server',\n                            'Used GraphQL for building api endpoints and accessing data',\n                        ]\n                    },\n                    {\n\n                        title: 'Devops',\n                        secondaryHeading: 'The platform for developing and hosting the visualizing historical kitchener client and admin website',\n                        body: [\n                            'Created an AWS VPC that is scalable and can grow different elements as needed',\n                            'Configured an Nginx reverse-proxy to redirect site requests to the node server',\n                            'EC2 for hosting the website, and running the Nginx, Nodejs server',\n                            'EC2 for hosting the MongoDB databse allowing for different rates of scaling and a specialized instance for databases'\n                        ]\n\n                    }\n                    ]\n                }\n            )\n        case 2:\n            return (\n                {\n                    items: [{\n                        title: 'Frontend',\n                        stackItems: [\n\n                            {\n                                logoLink: `${process.env.PUBLIC_URL}/reactLogo.png`,\n                                label: \"React\",\n                                description: \"Light weight frontend library\"\n                            },\n                            {\n                                logoLink: `${process.env.PUBLIC_URL}/reduxLogo.png`,\n                                label: \"Redux\",\n                                description: \"State management tool\"\n\n                            },\n                            {\n                                logoLink: `${process.env.PUBLIC_URL}/leafletLogo.png`,\n                                label: \"Leaflet\",\n                                description: \"For rendering the map\"\n                            },\n                        ]\n                    },\n                    {\n                        title: 'Backend',\n                        stackItems: [\n                            {\n                                logoLink: `${process.env.PUBLIC_URL}/nodeLogo.png`,\n                                label: \"NodeJS\",\n                                description: \"Backend environment\"\n                            },\n                            {\n                                logoLink: `${process.env.PUBLIC_URL}/expressLogo.png`,\n                                label: \"Express\",\n                                description: \"Server framework\"\n                            },\n                        ],\n                    },\n                    {\n                        title: 'Data',\n                        stackItems: [\n                            {\n                                logoLink: `${process.env.PUBLIC_URL}/postgresLogo.png`,\n                                label: \"Postgresql\",\n                                description: \"Database for tabular site data\"\n                            },\n                            {\n                                logoLink: `${process.env.PUBLIC_URL}/mongoLogo.png`,\n                                label: \"MongoDB\",\n                                description: \"Database for the admin site and user profiles\"\n                            },\n                        ],\n                    },\n                    {\n                        title: 'Devops',\n                        stackItems: [\n                            {\n                                logoLink: `${process.env.PUBLIC_URL}/awsLogo.png`,\n                                label: \"AWS\",\n                                description: \"Cloud platform\"\n                            },\n                            {\n                                logoLink: `${process.env.PUBLIC_URL}/awsEC2Logo.png`,\n                                label: \"AWS EC2\",\n                                description: \"Server for hosting the website\"\n                            },\n                            {\n                                logoLink: `${process.env.PUBLIC_URL}/awsRDSLogo.png`,\n                                label: \"AWS RDS\",\n                                description: \"Server for hosting the sql database\"\n                            },\n                            {\n                                logoLink: `${process.env.PUBLIC_URL}/nginxLogo.png`,\n                                label: \"Nginx\",\n                                description: \"frontline server and load balancer\"\n                            },\n                            {\n                                logoLink: `${process.env.PUBLIC_URL}/dockerLogo.png`,\n                                label: \"Docker\",\n                                description: \"Containerizer\"\n                            },\n\n                        ]\n                    }\n\n                    ]\n                }\n            )\n\n        default:\n            return (\n                {\n                    items: [{\n                        title: 'Client',\n                        body: [\n                            'Used Leaflet to create an interactive map of residents and businesses',\n                            'Built an intelligent and intuitive frontend product with the use of REACT/REDUX',\n                            'Built a clustered light weight NodeJS and Express server',\n                            'Used PostgreSQL to index, store, search and filter data',\n                        ]\n                    }]\n                }\n            )\n    }\n}\n\nfunction VerticalLinearStepper() {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const steps = getSteps();\n\n    const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        if (activeStep === 2) {\n            setActiveStep(0, 1, 2)\n        }\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n    const theme = useTheme();\n    const isMobile = useMediaQuery(theme.breakpoints.down(450))\n\n\n\n    return (\n        <div className={classes.root}>\n            <Stepper activeStep={activeStep} style={{ width: \"96vw\", backgroundColor: \"rgba(33, 34, 33, 1)\" }} orientation=\"vertical\">\n                {steps.map((label, index) => (\n                    <Step key={label} >\n                        <StepLabel style={{ color: \"white\" }}>{label}</StepLabel>\n                        <StepContent>\n                            {getStepContent(index).items.map((element) => {\n                                if (index === 1 || index === 2) {\n                                    return (\n                                        <Accordion style={{ borderRadius: \"8px\", marginTop: \"3px\" }}>\n                                            <AccordionSummary\n                                                expandIcon={<ExpandMoreIcon />}\n                                                aria-controls=\"panel1a-content\"\n                                                id=\"panel1a-header\"\n                                            >\n                                                <Typography className={classes.heading}>{element.title}</Typography>\n                                                <Typography className={classes.secondaryHeading}>{element.secondaryHeading}</Typography>\n                                            </AccordionSummary>\n                                            <AccordionDetails>\n                                                {index === 1 ?\n                                                    < Grid container direction=\"column\">\n                                                        {element.body.map((bodyElement) => {\n                                                            return (<li>{bodyElement}</li>\n                                                            )\n                                                        })}\n                                                    </Grid>\n                                                    : null}\n\n                                                {index === 2 ?\n\n\n                                                    <Grid container>\n                                                        {\n                                                            element.stackItems.map((stackElement) => {\n                                                                return (\n                                                                    <Paper elevation={3} className={isMobile ? classes.mobileCardRoot : classes.cardRoot}>\n                                                                        <div className={classes.cardDetails}>\n                                                                            <CardContent className={classes.cardContent}>\n                                                                                <Typography component=\"h5\" variant=\"h5\">\n                                                                                    {stackElement.label}\n                                                                                </Typography>\n                                                                                <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                                                                                    {stackElement.description}\n                                                                                </Typography>\n                                                                            </CardContent>\n                                                                        </div>\n                                                                        <CardMedia\n\n                                                                            height=\"140\"\n                                                                            className={classes.cardCover}\n                                                                            title={stackElement.label}\n                                                                        >\n                                                                            <img src={stackElement.logoLink} height={100} width={120} />\n                                                                        </CardMedia>\n                                                                    </Paper>\n                                                                )\n                                                            })\n                                                        }\n                                                    </Grid>\n                                                    : null}\n                                            </AccordionDetails>\n                                        </Accordion>\n                                    )\n                                }\n                                else {\n                                    return (\n                                        <Paper elevation={3} style={{ padding: '8px' }}>\n                                            <Typography>\n                                                This initiative aims to provide scholars, researchers, and the public with a\n                                                visual directory, index, and account of Kitchener's residential, business and industrial development.\n                                                I was responsible of building the web platform for the project which included bulding a website for users to view, search and filter the data,\n                                                an admin website for iterating and uploading data as datasets are validated, and finding a solution for hosting the website.\n                                        </Typography>\n                                        </Paper>\n                                    )\n                                }\n                            })\n                            }\n                            <div className={classes.actionsContainer}>\n                                <div>\n                                    <Button\n                                        disabled={activeStep === 0}\n                                        onClick={handleBack}\n                                        style={{ color: \"white\" }}\n                                        className={classes.button}\n                                    >Back</Button>\n                                    <Button\n                                        variant=\"contained\"\n                                        style={{ backgroundColor: \"white\", color: \"black\" }}\n                                        onClick={handleNext}\n                                        className={classes.button}\n                                    >\n                                        {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                    </Button>\n                                </div>\n                            </div>\n                        </StepContent>\n                    </Step>\n                ))}\n\n            </Stepper>\n            {\n                activeStep === steps.length && (\n                    <Paper square elevation={0} className={classes.resetContainer}>\n                        <Typography>All steps completed - you&apos;re finished</Typography>\n                        <Button onClick={handleReset} className={classes.button}>\n                            Reset\n          </Button>\n                    </Paper>\n                )\n            }\n        </div >\n    );\n}\n\nexport default visKitch;","import { Typography, Grid, useMediaQuery, useTheme } from \"@material-ui/core\";\n\nimport React from 'react';\nimport { makeStyles, Accordion, AccordionSummary, classes, AccordionDetails, Card, CardContent, CardMedia } from '@material-ui/core';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\n\n\nconst hrtBeat = () => {\n\n\n    return (\n        <div>\n            <Grid container justify=\"center\" >\n                <Typography variant={\"h2\"} style={{ color: \"white\" }}>Heartbeat.io</Typography>\n                <Typography variant={\"h4\"} style={{ color: \"white\" }}>A startup, that helps connect patients to doctors and other service providers</Typography>\n                <Typography variant={\"h6\"} style={{ color: \"white\" }}>(in development)</Typography>\n                <Paper elevation={5} style={{ marginTop: \"25px\", paddingTop: \"10px\", paddingBottom: \"10px\", borderRadius: \"8px\", backgroundColor: \"rgba(33, 34, 33, 1)\" }}>\n                    <Grid container justify=\"center\">\n                        <VerticalLinearStepper />\n                        <Button variant={\"outlined\"} style={{ borderColor: \"white\", color: \"white\" }} onClick={() => window.open(\"https://hrtbeat.io\")}>Go to site</Button>\n                    </Grid>\n                </Paper>\n            </Grid>\n        </div>\n    )\n}\n\n\n\nconst useStyles = makeStyles((theme) => ({\n\n\n    root: {\n        width: '100%',\n\n    },\n    button: {\n        marginTop: theme.spacing(1),\n        marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n        marginBottom: theme.spacing(2),\n\n    },\n    resetContainer: {\n        padding: theme.spacing(3),\n\n\n    },\n    heading: {\n        fontSize: theme.typography.pxToRem(15),\n        flexBasis: '33.33%',\n        flexShrink: 0,\n    },\n    secondaryHeading: {\n        fontSize: theme.typography.pxToRem(15),\n        color: theme.palette.text.secondary,\n    },\n    cardRoot: {\n        display: 'flex',\n        marginInline: '8px',\n        marginTop: '8px',\n        padding: '3px',\n        maxWidth: '100%'\n    },\n    mobileCardRoot: {\n        display: 'flex',\n        marginInline: '0px',\n        marginTop: '8px',\n        padding: '3px',\n        maxWidth: '100%'\n    },\n    cardDetails: {\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    cardContent: {\n        flex: '1 0 auto',\n    },\n    cardCover: {\n        width: 151,\n    },\n    cardControls: {\n        display: 'flex',\n        alignItems: 'center',\n        paddingLeft: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n    },\n    cardPlayIcon: {\n        height: 38,\n        width: 38,\n    },\n}));\n\nfunction getSteps() {\n    return [\n        <Typography variant={\"h6\"} style={{ color: \"white\" }}>Project Description</Typography>,\n        <Typography variant={\"h6\"} style={{ color: \"white\" }}>What I did</Typography>,\n        <Typography variant={\"h6\"} style={{ color: \"white\" }}>The stack I used</Typography>,\n    ];\n}\n\nfunction getStepContent(step) {\n\n    switch (step) {\n        case 0:\n            return (\n                {\n                    items: [\n                        {\n                            description: 'Heartbeat.io is a startup aiming to revolutionize how users find and communicate with doctors and other health care providers. '\n                                + 'Removing the effort and guess work from finding the ideal health care provider.'\n                                + ' In response to the pandemic we are focusing on providing crucial data, such as icu and hospital bed availability.'\n                        }\n                    ]\n                }\n            )\n        case 1:\n            return (\n                {\n                    items: [{\n                        title: 'Client Site',\n                        secondaryHeading: 'A scalable website that visualizes the City of Kitchener’s historical archives',\n                        body: [\n                            'Used Leaflet to create an interactive map of residents and businesses',\n                            'Built an intelligent and intuitive frontend product with the use of REACT/REDUX',\n                            'Built a clustered light weight NodeJS and Express server',\n                            'Used PostgreSQL to index, store, search and filter data',\n                        ]\n                    },\n                    {\n                        title: 'Admin Portal',\n                        secondaryHeading: 'A secure backend admin portal, to easily administer and iterate the database',\n                        body: [\n                            \"Built a drag and drop platform to process clean and add data from csv files to the database\",\n                            \"Created a user account and class structure (superuser, regularuser)\",\n                            \"Built a team viewing portal to help keep track of the CI/CD process\"]\n                    },\n\n                    {\n\n                        title: 'Devops',\n                        secondaryHeading: 'The platform for developing and hosting the visualizing historical kitchener client and admin website',\n                        body: [\n                            'Created an AWS vpc for the different components of the website',\n                            'Configured an Nginx server and reverse-proxy to serve static files, and redirect site requests to the node server',\n                            'EC2 for hosting the website, and running the Nginx, Nodejs server',\n                            'RDS Postgres for hosting the Postgres database'\n                        ]\n\n                    }\n                    ]\n                }\n            )\n        case 2:\n            return (\n                {\n                    items: [{\n                        title: 'Frontend',\n                        stackItems: [\n\n                            {\n                                logoLink: `${process.env.PUBLIC_URL}/reactLogo.png`,\n                                label: \"React\",\n                                description: \"Light weight frontend library\"\n                            },\n                            {\n                                logoLink: `${process.env.PUBLIC_URL}/reduxLogo.png`,\n                                label: \"Redux\",\n                                description: \"State management tool\"\n\n                            },\n                            {\n                                logoLink: `${process.env.PUBLIC_URL}/leafletLogo.png`,\n                                label: \"Leaflet\",\n                                description: \"For rendering the map\"\n                            },\n                        ]\n                    },\n                    {\n                        title: 'Backend',\n                        stackItems: [\n                            {\n                                logoLink: `${process.env.PUBLIC_URL}/nodeLogo.png`,\n                                label: \"NodeJS\",\n                                description: \"Backend environment\"\n                            },\n                            {\n                                logoLink: `${process.env.PUBLIC_URL}/expressLogo.png`,\n                                label: \"Express\",\n                                description: \"Server framework\"\n                            },\n                        ],\n                    },\n                    {\n                        title: 'Data',\n                        stackItems: [\n                            {\n                                logoLink: `${process.env.PUBLIC_URL}/postgresLogo.png`,\n                                label: \"Postgresql\",\n                                description: \"Database for tabular site data\"\n                            },\n                            {\n                                logoLink: `${process.env.PUBLIC_URL}/mongoLogo.png`,\n                                label: \"MongoDB\",\n                                description: \"Database for the admin site and user profiles\"\n                            },\n                        ],\n                    },\n                    {\n                        title: 'Devops',\n                        stackItems: [\n                            {\n                                logoLink: `${process.env.PUBLIC_URL}/awsLogo.png`,\n                                label: \"AWS\",\n                                description: \"Cloud platform\"\n                            },\n                            {\n                                logoLink: `${process.env.PUBLIC_URL}/awsEC2Logo.png`,\n                                label: \"AWS EC2\",\n                                description: \"Server for hosting the website\"\n                            },\n                            {\n                                logoLink: `${process.env.PUBLIC_URL}/awsRDSLogo.png`,\n                                label: \"AWS RDS\",\n                                description: \"Server for hosting the sql database\"\n                            },\n                            {\n                                logoLink: `${process.env.PUBLIC_URL}/nginxLogo.png`,\n                                label: \"Nginx\",\n                                description: \"frontline server and load balancer\"\n                            },\n                            {\n                                logoLink: `${process.env.PUBLIC_URL}/dockerLogo.png`,\n                                label: \"Docker\",\n                                description: \"Containerizer\"\n                            },\n\n                        ]\n                    }\n\n                    ]\n                }\n            )\n\n        default:\n            return (\n                {\n                    items: [{\n                        title: 'Client',\n                        body: [\n                            'Used Leaflet to create an interactive map of residents and businesses',\n                            'Built an intelligent and intuitive frontend product with the use of REACT/REDUX',\n                            'Built a clustered light weight NodeJS and Express server',\n                            'Used PostgreSQL to index, store, search and filter data',\n                        ]\n                    }]\n                }\n            )\n    }\n}\n\nfunction VerticalLinearStepper() {\n    const classes = useStyles();\n    const [activeStep, setActiveStep] = React.useState(0);\n    const steps = getSteps();\n\n    const handleNext = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\n        if (activeStep === 2) {\n            setActiveStep(0, 1, 2)\n        }\n    };\n\n    const handleBack = () => {\n        setActiveStep((prevActiveStep) => prevActiveStep - 1);\n    };\n\n    const handleReset = () => {\n        setActiveStep(0);\n    };\n\n    const theme = useTheme();\n    const isMobile = useMediaQuery(theme.breakpoints.down(450))\n\n\n\n    return (\n        <div className={classes.root}>\n            <Stepper activeStep={activeStep} style={{ width: \"96vw\", backgroundColor: \"rgba(33, 34, 33, 1)\" }} orientation=\"vertical\">\n                {steps.map((label, index) => (\n                    <Step key={label} >\n                        <StepLabel style={{ color: \"white\" }}>{label}</StepLabel>\n                        <StepContent>\n                            {getStepContent(index).items.map((element) => {\n                                if (index === 1 || index === 2) {\n                                    return (\n                                        <Accordion style={{ borderRadius: \"8px\", marginTop: \"3px\" }}>\n                                            <AccordionSummary\n                                                expandIcon={<ExpandMoreIcon />}\n                                                aria-controls=\"panel1a-content\"\n                                                id=\"panel1a-header\"\n                                            >\n                                                <Typography className={classes.heading}>{element.title}</Typography>\n                                                <Typography className={classes.secondaryHeading}>{element.secondaryHeading}</Typography>\n                                            </AccordionSummary>\n                                            <AccordionDetails>\n                                                {index === 1 ?\n                                                    < Grid container direction=\"column\">\n                                                        {element.body.map((bodyElement) => {\n                                                            return (<li>{bodyElement}</li>\n                                                            )\n                                                        })}\n                                                    </Grid>\n                                                    : null}\n\n                                                {index === 2 ?\n\n\n                                                    <Grid container>\n                                                        {\n                                                            element.stackItems.map((stackElement) => {\n                                                                return (\n                                                                    <Paper elevation={3} className={isMobile ? classes.mobileCardRoot : classes.cardRoot}>\n                                                                        <div className={classes.cardDetails}>\n                                                                            <CardContent className={classes.cardContent}>\n                                                                                <Typography component=\"h5\" variant=\"h5\">\n                                                                                    {stackElement.label}\n                                                                                </Typography>\n                                                                                <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                                                                                    {stackElement.description}\n                                                                                </Typography>\n                                                                            </CardContent>\n                                                                        </div>\n                                                                        <CardMedia\n\n                                                                            height=\"140\"\n                                                                            className={classes.cardCover}\n                                                                            title={stackElement.label}\n                                                                        >\n                                                                            <img src={stackElement.logoLink} height={100} width={120} />\n                                                                        </CardMedia>\n                                                                    </Paper>\n                                                                )\n                                                            })\n                                                        }\n                                                    </Grid>\n                                                    : null}\n                                            </AccordionDetails>\n                                        </Accordion>\n                                    )\n                                }\n                                else {\n                                    return (\n                                        <Paper elevation={3} style={{ padding: '8px' }}>\n                                            <Typography>\n                                                {element.description}\n                                        </Typography>\n                                        </Paper>\n                                    )\n                                }\n                            })\n                            }\n                            <div className={classes.actionsContainer}>\n                                <div>\n                                    <Button\n                                        disabled={activeStep === 0}\n                                        onClick={handleBack}\n                                        style={{ color: \"white\" }}\n                                        className={classes.button}\n                                    >Back</Button>\n                                    <Button\n                                        variant=\"contained\"\n                                        style={{ backgroundColor: \"white\", color: \"black\" }}\n                                        onClick={handleNext}\n                                        className={classes.button}\n                                    >\n                                        {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                                    </Button>\n                                </div>\n                            </div>\n                        </StepContent>\n                    </Step>\n                ))}\n            </Stepper>\n            {\n                activeStep === steps.length && (\n                    <Paper square elevation={0} className={classes.resetContainer}>\n                        <Typography>All steps completed - you&apos;re finished</Typography>\n                        <Button onClick={handleReset} className={classes.button}>\n                            Reset\n          </Button>\n                    </Paper>\n                )\n            }\n        </div >\n    );\n}\n\nexport default hrtBeat;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport VisKitch from './VisualizingKitchener';\nimport HeartBeat from './HeartBeat'; \nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <Box p={3}>\n                    <Typography>{children}</Typography>\n                </Box>\n            )}\n        </div>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        backgroundColor: \"rgba(33, 34, 33, 1)\",\n        width: '100%',\n    },\n    tab: {\n        backgroundColor: \"rgba(33, 34, 33, 1)\",\n        color: \"white\",\n        paddingTop: \"10px\"\n\n    }\n}));\n\nexport default function FullWidthTabs() {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = (index) => {\n        setValue(index);\n    };\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" color=\"default\">\n                <Tabs\n                    value={value}\n                    className={classes.tab}\n                    onChange={handleChange}\n                    variant=\"fullWidth\"\n                    aria-label=\"full width tabs example\"\n                >\n                    <Tab className={classes.tab} label=\"Visualizing Kitchener\" {...a11yProps(0)} />\n                    <Tab className={classes.tab} label=\"Heartbeat.io\" {...a11yProps(1)} />\n                </Tabs>\n            </AppBar>\n            <SwipeableViews\n                axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                index={value}\n                onChangeIndex={handleChangeIndex}\n            >\n                <TabPanel className={classes.tabPanel} value={value} index={0} dir={theme.direction}>\n                    <VisKitch />\n                </TabPanel>\n                <TabPanel className={classes.tablPanel} value={value} index={1} dir={theme.direction}>\n                    <HeartBeat />\n                </TabPanel>\n            </SwipeableViews>\n        </div>\n    );\n}","import { Card, Grid, Button, useTheme, useMediaQuery, Paper, Typography } from '@material-ui/core';\nimport Anime, { anime } from 'react-anime';\nimport Navbar from './navbar';\nimport TitlePng from '../Static/Rashad_Arbab.png';\nimport MyPhoto from '../Static/PhotoOfMe.jpg';\nimport AboutPaper from './about-paper';\nimport ProjectsContent from './projectsContent';\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nconst Projects = () => {\n\n    const theme = useTheme();\n    const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"))\n    const xsScreen = useMediaQuery(theme.breakpoints.down(\"xs\"))\n    const lgScreen = useMediaQuery(theme.breakpoints.up(\"lg\"))\n\n    const [goProjects, setGoProjects] = useState(false);\n\n    const textPadding = xsScreen ? \"8px\" : \"20px\"\n    const cardWidth = xsScreen ? \"85vw\" : \"60vw\"\n    return (\n        <div>\n\n            <Anime\n                opacity={[0, 1]}\n                easing={\"easeInOutSine\"}\n                duration={1000}\n            >\n                <Navbar type={\"projects\"} />\n\n            </Anime>\n            <Grid container justify=\"center\">\n                <ProjectsContent />\n            </Grid>\n\n        </div >\n    )\n}\n\nexport default Projects;","import { Card, Grid, Button, useTheme, useMediaQuery, Paper, Typography, TextField, Snackbar } from '@material-ui/core';\nimport Anime, { anime } from 'react-anime';\nimport Navbar from './navbar';\nimport TitlePng from '../Static/Rashad_Arbab.png';\nimport MyPhoto from '../Static/PhotoOfMe.jpg';\nimport AboutPaper from './about-paper';\nimport Alert from '@material-ui/lab/Alert';\nimport React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport emailjs from 'emailjs-com';\n\n\n\nconst Contact = () => {\n\n    const theme = useTheme();\n    const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"))\n    const xsScreen = useMediaQuery(theme.breakpoints.down(\"xs\"))\n    const lgScreen = useMediaQuery(theme.breakpoints.up(\"lg\"))\n\n    const [goProjects, setGoProjects] = useState(false);\n\n    const textPadding = xsScreen ? \"8px\" : \"20px\"\n    const cardWidth = xsScreen ? \"85vw\" : \"60vw\"\n\n    const [open, setOpen] = useState(false);\n    const [alert, setAlert] = useState({});\n\n\n    function sendEmail(e) {\n        e.preventDefault();\n\n        console.log(e.target);\n\n        emailjs.sendForm('service_ch44s5p', 'template_s8isrg9', e.target, 'user_DeWeZ1UuwarWbiedFYXx3')\n            .then((result) => {\n                console.log(result.text);\n                var alert = {\n                    open: true,\n                    severity: 'success',\n                    message: \"Thank you for contacting me, I will get back to you soon.\"\n                }\n                setAlert(alert);\n                setOpen(true)\n            }, (error) => {\n                console.log(error.text);\n                var alert = {\n                    open: true,\n                    severity: 'error',\n                    message: \"Sorry we ran into an error, please try again.\"\n                }\n                setAlert(alert);\n                setOpen(true)\n            });\n    }\n\n    const formWidth = () => {\n        if (xsScreen) {\n            return \"80vw\"\n        } else if (isMobile) {\n            return \"65vw\"\n        } else {\n            return \"45vw\"\n        }\n    }\n\n\n    const showSnackBar = () => {\n        console.log(alert);\n        return (\n            <div>\n                <Snackbar anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }} open={open} autoHideDuration={3000} onClose={() => (setOpen(false))}>\n                    <Alert variant=\"filled\" severity={alert.severity} onClose={() => setOpen(false)}>\n                        {alert.message}\n                    </Alert>\n                </Snackbar>\n            </div>\n        )\n\n    }\n\n    return (\n        <div>\n            <div>\n                <Navbar type={\"contact\"} />\n            </div>\n            <div><Anime\n                opacity={[0, 1]}\n                easing={\"easeInOutSine\"}\n                duration={1000}\n            >\n                <Grid container justify=\"center\" alignItems=\"center\">\n                    <Paper elevation={5} style={{ width: formWidth(), borderRadius: '8px', margin: \"10px\", padding: \"25px\", position: \"absolute\", top: '20%' }}>\n                        <form className=\"contact-form\" onSubmit={sendEmail}>\n                            <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\n                                <h2>Contact Rashad</h2>\n                                <TextField id=\"standard-basic\" style={{ width: \"75%\" }} name='contact_name' label=\"Name\" />\n                                <TextField id=\"standard-basic\" style={{ width: \"75%\" }} name='contact_email' label=\"Email\" />\n                                <TextField id=\"standard-basic\" style={{ width: \"75%\" }} name='contact_phone' label=\"Phone\" />\n                                <TextField\n                                    id=\"standard-multiline-basic\"\n                                    label=\"Subject\"\n                                    multiline\n                                    name=\"subject\"\n                                    style={{ width: \"75%\" }}\n                                />\n                                <TextField\n                                    id=\"standard-multiline-basic\"\n                                    label=\"Message\"\n                                    multiline\n                                    name=\"message\"\n                                    style={{ width: \"75%\" }}\n                                />\n                                <br />\n                                <Button style={{ margin: '10px' }} variant='contained' type=\"submit\" value=\"Send\"> Send Message </Button>\n                            </Grid >\n                        </form>\n                    </Paper>\n\n                </Grid>\n            </Anime>\n            </div>\n\n            {open ? showSnackBar() : null}\n        </div>\n    );\n\n\n\n\n}\n\nexport default Contact;","import logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter, Route, Redirect } from 'react-router-dom';\nimport Home from './Components/home';\nimport About from './Components/about';\nimport Projects from './Components/projects';\nimport Contact from './Components/contact';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter basename=\"/RashadArbab\">\n        <Route path=\"/\" exact>\n          <Redirect to=\"/home\" exact />\n        </Route>\n        <Route path=\"/home\" component={Home} exact />\n        <Route path=\"/about\" component={About} exact />\n        <Route path=\"/projects\" component={Projects} exact />\n        <Route path=\"/contact\" component={Contact} exact />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}